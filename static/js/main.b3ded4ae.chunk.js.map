{"version":3,"sources":["serverError.js","components/alunos.jsx","App.js","index.js"],"names":["serverError","_Error","errorCode","message","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_inherits","_wrapNativeSuper","Error","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ListaAlunos","_useState","useState","_useState2","_slicedToArray","alunos","setAlunos","useEffect","_fetchData","_asyncToGenerator","_callee","response","alunosResponse","sortedAlunos","_context","fetch","ok","console","log","json","sort","a","b","nome","localeCompare","t0","alert","apply","arguments","fetchData","React","createElement","data-testid","map","aluno","estiloCor","nota","color","style","_objectSpread","display","justifyContent","alignItems","height","App","className","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b3ded4ae.chunk.js","sourcesContent":["//classe customizada para erros de servidor diferentes do typeError que geralmente acontece quando o fetch nao consegue se comunicar com o servidor\r\n//um exemplo seria de quando o servidor responde com um erro 400, 404, 500, etc\r\n\r\n\r\nclass serverError extends Error {\r\n    constructor(errorCode, message) {\r\n      super(message);\r\n      this.errorCode = errorCode;\r\n    }\r\n  }\r\n  \r\n  export default serverError;","import React, { useState, useEffect } from \"react\";\r\nimport serverError from \"../serverError\";\r\nfunction ListaAlunos() {\r\n  \r\n  // estado para armazenar a lista de alunos\r\n  const [alunos, setAlunos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:8000/alunos\");\r\n        if (!response.ok){\r\n          //se a resposta não for ok, lançamos uma exceção com a mensagem de erro e o status code\r\n          //nesse caso status code é arbitrário, podemos definir um outro arquivo com as possíveis mensagens de erro e status code\r\n          console.log(response)\r\n          throw new serverError(500, \"Não foi possível buscar os dados dos alunos.\");\r\n          \r\n        }\r\n        const alunosResponse = await response.json();\r\n        //ordena a lista de alunos em ordem alfabética pelo nome\r\n        const sortedAlunos = alunosResponse.alunos.sort((a, b) => a.nome.localeCompare(b.nome));\r\n        setAlunos(sortedAlunos);\r\n      } catch (error) {\r\n        if(error instanceof serverError){\r\n          alert(error.message);\r\n        }else if(error instanceof TypeError){ \r\n          //se o erro for de conexão, exibe uma mensagem de erro genérica\r\n          //TypeError aqui é o tipo de erro que o fetch retorna quando não consegue se conectar ao servidor\r\n          alert('Não foi possível conectar ao servidor. Tente novamente mais tarde.');\r\n        }else{\r\n          alert(\"Ocorreu um erro inesperado.\");\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <ul data-testid=\"lista-de-alunos\">\r\n      {alunos.map((aluno) => { // para cada aluno verifica a nota pra aplicar o estilo e depois retorna o li com o nome do aluno e estilo aplicado\r\n        const estiloCor = aluno.nota < 50 ? { color: 'red' } : { color: 'green' };\r\n        return (// retorna o li com o nome do aluno, usando o nome como key \r\n        //lembrete justify-content = eixo x, align-items = eixo y\r\n        //spread operator para aplicar o estilo de cor\r\n          <li key={aluno.nome} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50px', ...estiloCor }}>\r\n            {aluno.nome}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListaAlunos;\r\n","import React from 'react';\r\nimport ListaAlunos from './components/alunos.jsx';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ListaAlunos />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}